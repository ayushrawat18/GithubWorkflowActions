name: PR Dependency Check

on:
  pull_request:
    paths:
      - '**/*.xml'

jobs:
  dependency-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Fetch full history to enable comparisons

    - name: Fetch base branch explicitly
      run: |
        # Fetch the base branch to ensure it's available locally
        git fetch origin ${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}

    - name: Fetch list of changed files
      id: changed-files
      run: |
        # Ensure the base and head branches are defined correctly
        BASE_BRANCH="origin/${{ github.base_ref }}"
        HEAD_BRANCH="${{ github.head_ref }}"

        # Check and print branch references
        echo "Base branch: $BASE_BRANCH"
        echo "Head branch: $HEAD_BRANCH"

        # Get the list of changed files between the base and head branches
        CHANGED_FILES=$(git diff --name-only $BASE_BRANCH HEAD)
        echo "$CHANGED_FILES" > changed_files.txt
        echo "Changed files:"
        cat changed_files.txt

    - name: Check for dependent files
      id: dependency-check
      run: |
        # Read the list of changed files
        CHANGED_FILES=$(cat changed_files.txt)

        # Initialize failure flag
        FAIL=false

        # Loop through changed files and check for dependencies
        for FILE in $CHANGED_FILES; do
          if [[ "$FILE" =~ ^src/a_.*\.xml$ ]]; then
            DEPENDENT_FILE="${FILE/a_/a_dependent_}"
            if ! echo "$CHANGED_FILES" | grep -q "$DEPENDENT_FILE"; then
              echo "Error: Missing dependent file for $FILE. Expected: $DEPENDENT_FILE"
              FAIL=true
            fi
          fi
        done

        # Fail the step if any dependency is missing
        if $FAIL; then
          exit 1
        fi
      shell: bash
